[#C285BF]FROM[/] [#96DCFE]scratch[/]
[#C285BF]ADD[/] [#96DCFE]file:c13b430c8699df107ffd9ea5230b92238bc037a8e1cbbe35d6ab664941d575da[/] [#96DCFE]/[/]
[#C285BF]CMD[/] [#FAC81F][[[/][#CA9178]"bash"[/][#FAC81F]]][/]
[#C285BF]RUN[/] [#96DCFE]set -eux; [#FAC81F]\[/]
    apt-get update; [#FAC81F]\[/]
    apt-get install -y --no-install-recommends ca-certificates curl netbase wget ; [#FAC81F]\[/]
    rm -rf /var/lib/apt/lists/*
[/][#C285BF]RUN[/] [#96DCFE]set -ex; [#FAC81F]\[/]
    if ! command -v gpg > /dev/null; then apt-get update; [#FAC81F]\[/]
    apt-get install -y --no-install-recommends gnupg dirmngr ; [#FAC81F]\[/]
    rm -rf /var/lib/apt/lists/*; [#FAC81F]\[/]
    fi
[/][#C285BF]RUN[/] [#96DCFE]apt-get update && apt-get install -y --no-install-recommends git mercurial openssh-client subversion procps [#FAC81F]\[/]
    && rm -rf /var/lib/apt/lists/*
[/][#C285BF]RUN[/] [#96DCFE]set -eux; [#FAC81F]\[/]
    apt-get update; [#FAC81F]\[/]
    apt-get install -y --no-install-recommends g++ gcc libc6-dev make pkg-config ; [#FAC81F]\[/]
    rm -rf /var/lib/apt/lists/*
[/][#C285BF]ENV[/] [green]PATH[/][#FAC81F]=[/][#96DCFE]/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[/]
[#C285BF]ENV[/] [green]GOLANG_VERSION[/][#FAC81F]=[/][#96DCFE]1.19.4[/]
[#C285BF]RUN[/] [#96DCFE]set -eux; [#FAC81F]\[/]
    arch="$(dpkg --print-architecture)"; arch="${arch##*-}"; [#FAC81F]\[/]
    url=; [#FAC81F]\[/]
    case "$arch" in 'amd64') url='https://dl.google.com/go/go1.19.4.linux-amd64.tar.gz'; [#FAC81F]\[/]
    sha256='c9c08f783325c4cf840a94333159cc937f05f75d36a8b307951d5bd959cf2ab8'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'armel') export GOARCH='arm' GOARM='5' GOOS='linux'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'armhf') url='https://dl.google.com/go/go1.19.4.linux-armv6l.tar.gz'; [#FAC81F]\[/]
    sha256='7a51dae4f3a52d2dfeaf59367cc0b8a296deddc87e95aa619bf87d24661d2370'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'arm64') url='https://dl.google.com/go/go1.19.4.linux-arm64.tar.gz'; [#FAC81F]\[/]
    sha256='9df122d6baf6f2275270306b92af3b09d7973fb1259257e284dba33c0db14f1b'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'i386') url='https://dl.google.com/go/go1.19.4.linux-386.tar.gz'; [#FAC81F]\[/]
    sha256='e5f0b0551e120bf3d1246cb960ec58032d7ca69e1adcf0fdb91c07da620e0c61'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'mips64el') export GOARCH='mips64le' GOOS='linux'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    'ppc64el') url='https://dl.google.com/go/go1.19.4.linux-ppc64le.tar.gz'; [#FAC81F]\[/]
    sha256='fbc6c7d1d169bbdc82223d861d2fadc6add01c126533d3efbba3fdca9b362035'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    's390x') url='https://dl.google.com/go/go1.19.4.linux-s390x.tar.gz'; [#FAC81F]\[/]
    sha256='4b8d25acbdca8010c31ea8c5fd4aba93471ff6ada7a8b4fb04b935baee873dc8'; [#FAC81F]\[/]
    ;; [#FAC81F]\[/]
    *) echo >&2 "error: unsupported architecture '$arch' (likely packaging update needed)"; exit 1 ;; [#FAC81F]\[/]
    esac; [#FAC81F]\[/]
    build=; [#FAC81F]\[/]
    if [[ -z "$url" ]]; then build=1; [#FAC81F]\[/]
    url='https://dl.google.com/go/go1.19.4.src.tar.gz'; [#FAC81F]\[/]
    sha256='eda74db4ac494800a3e66ee784e495bfbb9b8e535df924a8b01b1a8028b7f368'; [#FAC81F]\[/]
    echo >&2; [#FAC81F]\[/]
    echo >&2 "warning: current architecture ($arch) does not have a compatible Go binary release; will be building from source"; [#FAC81F]\[/]
    echo >&2; [#FAC81F]\[/]
    fi; [#FAC81F]\[/]
    wget -O go.tgz.asc "$url.asc"; [#FAC81F]\[/]
    wget -O go.tgz "$url" --progress=dot:giga; [#FAC81F]\[/]
    echo "$sha256 *go.tgz" | sha256sum -c -; [#FAC81F]\[/]
    GNUPGHOME="$(mktemp -d)"; export GNUPGHOME; [#FAC81F]\[/]
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; [#FAC81F]\[/]
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; [#FAC81F]\[/]
    gpg --batch --verify go.tgz.asc go.tgz; [#FAC81F]\[/]
    gpgconf --kill all; [#FAC81F]\[/]
    rm -rf "$GNUPGHOME" go.tgz.asc; [#FAC81F]\[/]
    tar -C /usr/local -xzf go.tgz; [#FAC81F]\[/]
    rm go.tgz; [#FAC81F]\[/]
    if [[ -n "$build" ]]; then savedAptMark="$(apt-mark showmanual)"; [#FAC81F]\[/]
    apt-get update; [#FAC81F]\[/]
    apt-get install -y --no-install-recommends golang-go; [#FAC81F]\[/]
    export GOCACHE='/tmp/gocache'; [#FAC81F]\[/]
    ( cd /usr/local/go/src; [#FAC81F]\[/]
    export GOROOT_BOOTSTRAP="$(go env GOROOT)" GOHOSTOS="$GOOS" GOHOSTARCH="$GOARCH"; [#FAC81F]\[/]
    ./make.bash; [#FAC81F]\[/]
    ); [#FAC81F]\[/]
    apt-mark auto '.*' > /dev/null; [#FAC81F]\[/]
    apt-mark manual $savedAptMark > /dev/null; [#FAC81F]\[/]
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; [#FAC81F]\[/]
    rm -rf /var/lib/apt/lists/*; [#FAC81F]\[/]
    rm -rf /usr/local/go/pkg/*/cmd /usr/local/go/pkg/bootstrap /usr/local/go/pkg/obj /usr/local/go/pkg/tool/*/api /usr/local/go/pkg/tool/*/go_bootstrap /usr/local/go/src/cmd/dist/dist "$GOCACHE" ; [#FAC81F]\[/]
    fi; [#FAC81F]\[/]
    go version
[/][#C285BF]ENV[/] [green]GOPATH[/][#FAC81F]=[/][#96DCFE]/go[/]
[#C285BF]ENV[/] [green]PATH[/][#FAC81F]=[/][#96DCFE]/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin[/]
[#C285BF]RUN[/] [#96DCFE]mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
[/][#C285BF]WORKDIR[/] [#96DCFE]/go
[/]